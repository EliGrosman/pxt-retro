{
 "byQName": {
  "Array": {
   "kind": 9,
   "namespace": "",
   "name": "Array",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Array"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "T[]",
   "parameters": null,
   "qName": "Array"
  },
  "Array.length": {
   "kind": 2,
   "namespace": "Array",
   "name": "length",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Array_::length",
    "weight": 84,
    "blockId": "lists_length",
    "block": "length of %VALUE",
    "blockBuiltin": "true",
    "blockNamespace": "arrays",
    "paramHelp": {},
    "jsDoc": "Gets or sets the length of the array. This is a number one higher than the highest element defined in an array.",
    "_name": "length"
   },
   "pkg": null,
   "retType": "number",
   "parameters": null,
   "qName": "Array.length"
  },
  "Array.push": {
   "kind": 1,
   "namespace": "Array",
   "name": "push",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/push",
    "shim": "Array_::push",
    "weight": 49,
    "blockId": "array_push",
    "block": "%list| add value %value| to end",
    "blockNamespace": "arrays",
    "paramHelp": {
     "items": "New elements of the Array."
    },
    "jsDoc": "Appends new elements to an array.",
    "_name": "push"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "item",
     "description": "",
     "type": "T",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "push(null)",
   "qName": "Array.push"
  },
  "Array.pop": {
   "kind": 1,
   "namespace": "Array",
   "name": "pop",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/pop",
    "shim": "Array_::pop",
    "weight": 48,
    "blockId": "array_pop",
    "block": "get and remove last value from %list",
    "blockNamespace": "arrays",
    "paramHelp": {},
    "jsDoc": "Removes the last element from an array and returns it.",
    "_name": "pop"
   },
   "pkg": null,
   "retType": "T",
   "parameters": [],
   "snippet": "pop()",
   "qName": "Array.pop"
  },
  "Array.reverse": {
   "kind": 1,
   "namespace": "Array",
   "name": "reverse",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/reverse",
    "helper": "arrayReverse",
    "weight": 10,
    "advanced": true,
    "blockId": "array_reverse",
    "block": "reverse %list",
    "blockNamespace": "arrays",
    "paramHelp": {},
    "jsDoc": "Reverses the elements in an Array. The first array element becomes the last, and the last array element becomes the first.",
    "_name": "reverse"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [],
   "snippet": "reverse()",
   "qName": "Array.reverse"
  },
  "Array.shift": {
   "kind": 1,
   "namespace": "Array",
   "name": "shift",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/shift",
    "helper": "arrayShift",
    "weight": 70,
    "advanced": true,
    "blockId": "array_shift",
    "block": "get and remove first value from %list",
    "blockNamespace": "arrays",
    "paramHelp": {},
    "jsDoc": "Removes the first element from an array and returns that element. This method changes the length of the array.",
    "_name": "shift"
   },
   "pkg": null,
   "retType": "T",
   "parameters": [],
   "snippet": "shift()",
   "qName": "Array.shift"
  },
  "Array.unshift": {
   "kind": 1,
   "namespace": "Array",
   "name": "unshift",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/unshift",
    "helper": "arrayUnshift",
    "weight": 69,
    "advanced": true,
    "blockId": "array_unshift",
    "block": "%list| insert %value| at beginning",
    "blockNamespace": "arrays",
    "paramHelp": {
     "element": "to insert at the start of the Array."
    },
    "jsDoc": "Adds one element to the beginning of an array and returns the new length of the array.",
    "_name": "unshift"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "value",
     "description": "",
     "type": "T",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "unshift(null)",
   "qName": "Array.unshift"
  },
  "Array.slice": {
   "kind": 1,
   "namespace": "Array",
   "name": "slice",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/slice",
    "helper": "arraySlice",
    "weight": 41,
    "advanced": true,
    "blockNamespace": "arrays",
    "paramHelp": {
     "start": "The beginning of the specified portion of the array. eg: 0",
     "end": "The end of the specified portion of the array. eg: 0"
    },
    "jsDoc": "Returns a section of an array.",
    "_name": "slice"
   },
   "pkg": null,
   "retType": "T[]",
   "parameters": [
    {
     "name": "start",
     "description": "The beginning of the specified portion of the array. eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    },
    {
     "name": "end",
     "description": "The end of the specified portion of the array. eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "slice(0, 0)",
   "qName": "Array.slice"
  },
  "Array.splice": {
   "kind": 1,
   "namespace": "Array",
   "name": "splice",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "helper": "arraySplice",
    "weight": 40,
    "paramHelp": {
     "start": "The zero-based location in the array from which to start removing elements. eg: 0",
     "deleteCount": "The number of elements to remove. eg: 0"
    },
    "jsDoc": "Removes elements from an array.",
    "_name": "splice"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "start",
     "description": "The zero-based location in the array from which to start removing elements. eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    },
    {
     "name": "deleteCount",
     "description": "The number of elements to remove. eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "splice(0, 0)",
   "qName": "Array.splice"
  },
  "Array.sort": {
   "kind": 1,
   "namespace": "Array",
   "name": "sort",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "helper": "arraySort",
    "weight": 40,
    "paramHelp": {
     "specifies": "a function that defines the sort order. If omitted, the array is sorted according to the prmitive type"
    },
    "jsDoc": "Sorts the elements of an array in place and returns the array. The sort is not necessarily stable.",
    "_name": "sort"
   },
   "pkg": null,
   "retType": "T[]",
   "parameters": [
    {
     "name": "callbackfn",
     "description": "",
     "type": "(value1: T, value2: T) => number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "sort()",
   "qName": "Array.sort"
  },
  "Array.map": {
   "kind": 1,
   "namespace": "Array",
   "name": "map",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "helper": "arrayMap",
    "weight": 40,
    "paramHelp": {
     "callbackfn": "A function that accepts up to two arguments. The map method calls the callbackfn function one time for each element in the array."
    },
    "jsDoc": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
    "_name": "map"
   },
   "pkg": null,
   "retType": "U[]",
   "parameters": [
    {
     "name": "callbackfn",
     "description": "A function that accepts up to two arguments. The map method calls the callbackfn function one time for each element in the array.",
     "type": "(value: T, index: number) => U",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "map(() => {})",
   "qName": "Array.map"
  },
  "Array.filter": {
   "kind": 1,
   "namespace": "Array",
   "name": "filter",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "helper": "arrayFilter",
    "weight": 40,
    "paramHelp": {
     "callbackfn": "A function that accepts up to two arguments. The filter method calls the callbackfn function one time for each element in the array."
    },
    "jsDoc": "Returns the elements of an array that meet the condition specified in a callback function.",
    "_name": "filter"
   },
   "pkg": null,
   "retType": "T[]",
   "parameters": [
    {
     "name": "callbackfn",
     "description": "A function that accepts up to two arguments. The filter method calls the callbackfn function one time for each element in the array.",
     "type": "(value: T, index: number) => boolean",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "filter(() => {})",
   "qName": "Array.filter"
  },
  "Array.reduce": {
   "kind": 1,
   "namespace": "Array",
   "name": "reduce",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "helper": "arrayReduce",
    "weight": 40,
    "paramHelp": {
     "callbackfn": "A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the array.",
     "initialValue": "Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
    },
    "jsDoc": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
    "_name": "reduce"
   },
   "pkg": null,
   "retType": "U",
   "parameters": [
    {
     "name": "callbackfn",
     "description": "A function that accepts up to three arguments. The reduce method calls the callbackfn function one time for each element in the array.",
     "type": "(previousValue: U, currentValue: T, currentIndex: number) => U",
     "options": {},
     "isEnum": false
    },
    {
     "name": "initialValue",
     "description": "Initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.",
     "type": "U",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "reduce(() => {}, null)",
   "qName": "Array.reduce"
  },
  "Array.removeElement": {
   "kind": 1,
   "namespace": "Array",
   "name": "removeElement",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Array_::removeElement",
    "weight": 48,
    "paramHelp": {},
    "jsDoc": "Removes the first occurence of an object. Returns true if removed.",
    "_name": "removeElement"
   },
   "pkg": null,
   "retType": "boolean",
   "parameters": [
    {
     "name": "element",
     "description": "",
     "type": "T",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "removeElement(null)",
   "qName": "Array.removeElement"
  },
  "Array.removeAt": {
   "kind": 1,
   "namespace": "Array",
   "name": "removeAt",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/removeat",
    "shim": "Array_::removeAt",
    "weight": 49,
    "advanced": true,
    "blockId": "array_removeat",
    "block": "%list| remove value at %index",
    "blockNamespace": "arrays",
    "paramHelp": {},
    "jsDoc": "Removes the object at position index.",
    "_name": "removeAt"
   },
   "pkg": null,
   "retType": "T",
   "parameters": [
    {
     "name": "index",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "removeAt(0)",
   "qName": "Array.removeAt"
  },
  "Array.insertAt": {
   "kind": 1,
   "namespace": "Array",
   "name": "insertAt",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/insertat",
    "shim": "Array_::insertAt",
    "weight": 84,
    "advanced": true,
    "blockId": "array_insertAt",
    "block": "%list| insert at %index| value %value",
    "blockNamespace": "arrays",
    "paramHelp": {
     "index": "the zero-based position in the list to insert the value, eg: 0",
     "the": "value to insert, eg: 0"
    },
    "jsDoc": "Insert the value at a particular index, increases length by 1",
    "_name": "insertAt"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "index",
     "description": "the zero-based position in the list to insert the value, eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    },
    {
     "name": "value",
     "description": "",
     "type": "T",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "insertAt(0, null)",
   "qName": "Array.insertAt"
  },
  "Array.indexOf": {
   "kind": 1,
   "namespace": "Array",
   "name": "indexOf",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/indexof",
    "shim": "Array_::indexOf",
    "weight": 50,
    "advanced": true,
    "blockId": "array_indexof",
    "block": "%list| find index of %value",
    "blockNamespace": "arrays",
    "paramHelp": {
     "item": "The value to locate in the array.",
     "fromIndex": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
    },
    "jsDoc": "Returns the index of the first occurrence of a value in an array.",
    "_name": "indexOf"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "item",
     "description": "The value to locate in the array.",
     "type": "T",
     "options": {},
     "isEnum": false
    },
    {
     "name": "fromIndex",
     "description": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "indexOf(null)",
   "qName": "Array.indexOf"
  },
  "Array.get": {
   "kind": 1,
   "namespace": "Array",
   "name": "get",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/get",
    "shim": "Array_::getAt",
    "weight": 85,
    "paramHelp": {
     "index": "the zero-based position in the list of the item, eg: 0"
    },
    "jsDoc": "Gets the value at a particular index",
    "_name": "get"
   },
   "pkg": null,
   "retType": "T",
   "parameters": [
    {
     "name": "index",
     "description": "the zero-based position in the list of the item, eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "get(0)",
   "qName": "Array.get"
  },
  "Array.set": {
   "kind": 1,
   "namespace": "Array",
   "name": "set",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "arrays/set",
    "shim": "Array_::setAt",
    "weight": 84,
    "paramHelp": {
     "index": "the zero-based position in the list to store the value, eg: 0",
     "the": "value to insert, eg: 0"
    },
    "jsDoc": "Stores the value at a particular index",
    "_name": "set"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "index",
     "description": "the zero-based position in the list to store the value, eg: 0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    },
    {
     "name": "value",
     "description": "",
     "type": "T",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "set(0, null)",
   "qName": "Array.set"
  },
  "String": {
   "kind": 5,
   "namespace": "",
   "name": "String",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "block": "String"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "",
   "parameters": null,
   "qName": "String"
  },
  "String.concat": {
   "kind": 1,
   "namespace": "String",
   "name": "concat",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::concat",
    "weight": 49,
    "blockId": "string_concat",
    "blockNamespace": "text",
    "paramHelp": {
     "other": "The string to append to the end of the string."
    },
    "jsDoc": "Returns a string that contains the concatenation of two or more strings.",
    "_name": "concat"
   },
   "pkg": null,
   "retType": "string",
   "parameters": [
    {
     "name": "other",
     "description": "The string to append to the end of the string.",
     "type": "string",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "concat(\"\")",
   "qName": "String.concat"
  },
  "String.charAt": {
   "kind": 1,
   "namespace": "String",
   "name": "charAt",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::charAt",
    "weight": 48,
    "blockId": "string_get",
    "block": "char from %this=text|at %pos",
    "blockNamespace": "text",
    "paramHelp": {
     "index": "The zero-based index of the desired character."
    },
    "jsDoc": "Returns the character at the specified index.",
    "_name": "charAt"
   },
   "pkg": null,
   "retType": "string",
   "parameters": [
    {
     "name": "index",
     "description": "The zero-based index of the desired character.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "charAt(0)",
   "qName": "String.charAt"
  },
  "String.length": {
   "kind": 2,
   "namespace": "String",
   "name": "length",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "property": "true",
    "shim": "String_::length",
    "weight": 47,
    "blockId": "text_length",
    "block": "length of %VALUE",
    "blockBuiltin": "true",
    "blockNamespace": "text",
    "paramHelp": {},
    "jsDoc": "Returns the length of a String object.",
    "_name": "length"
   },
   "pkg": null,
   "retType": "number",
   "parameters": null,
   "qName": "String.length"
  },
  "String.charCodeAt": {
   "kind": 1,
   "namespace": "String",
   "name": "charCodeAt",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::charCodeAt",
    "paramHelp": {
     "index": "The zero-based index of the desired character. If there is no character at the specified index, NaN is returned."
    },
    "jsDoc": "Returns the Unicode value of the character at the specified location.",
    "_name": "charCodeAt"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "index",
     "description": "The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "charCodeAt(0)",
   "qName": "String.charCodeAt"
  },
  "String.compare": {
   "kind": 1,
   "namespace": "String",
   "name": "compare",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::compare",
    "blockId": "string_compare",
    "block": "compare %this=text| to %that",
    "blockNamespace": "text",
    "paramHelp": {
     "that": "String to compare to target string"
    },
    "jsDoc": "Determines whether relative order of two strings (in ASCII encoding).",
    "_name": "compare"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "that",
     "description": "String to compare to target string",
     "type": "string",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "compare(\"\")",
   "qName": "String.compare"
  },
  "String.substr": {
   "kind": 1,
   "namespace": "String",
   "name": "substr",
   "attributes": {
    "paramDefl": {
     "length": "1000000"
    },
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::substr",
    "blockId": "string_substr",
    "block": "substring of %this=text|from %start|of length %length",
    "blockNamespace": "text",
    "paramHelp": {
     "start": "first character index; can be negative from counting from the end, eg:0",
     "length": "number of characters to extract"
    },
    "jsDoc": "Return substring of the current string.",
    "_name": "substr"
   },
   "pkg": null,
   "retType": "string",
   "parameters": [
    {
     "name": "start",
     "description": "first character index; can be negative from counting from the end, eg:0",
     "type": "number",
     "defaults": [
      "0"
     ],
     "options": {},
     "isEnum": false
    },
    {
     "name": "length",
     "description": "number of characters to extract",
     "type": "number",
     "initializer": "1000000",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "substr(0)",
   "qName": "String.substr"
  },
  "String.isEmpty": {
   "kind": 1,
   "namespace": "String",
   "name": "isEmpty",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::isEmpty",
    "blockId": "string_isempty",
    "blockNamespace": "text",
    "paramHelp": {},
    "jsDoc": "Returns a value indicating if the string is empty",
    "_name": "isEmpty"
   },
   "pkg": null,
   "retType": "boolean",
   "parameters": [],
   "snippet": "isEmpty()",
   "qName": "String.isEmpty"
  },
  "parseInt": {
   "kind": 3,
   "namespace": "",
   "name": "parseInt",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "String_::toNumber",
    "blockId": "string_parseint",
    "block": "parse to integer %text",
    "blockNamespace": "text",
    "paramHelp": {
     "s": "A string to convert into a number."
    },
    "jsDoc": "Converts A string to an integer.",
    "_name": "parseInt"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "text",
     "description": "",
     "type": "string",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "parseInt(\"\")",
   "qName": "parseInt"
  },
  "Object": {
   "kind": 9,
   "namespace": "",
   "name": "Object",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Object"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "Object",
   "parameters": null,
   "qName": "Object"
  },
  "Function": {
   "kind": 9,
   "namespace": "",
   "name": "Function",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Function"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "Function",
   "parameters": null,
   "qName": "Function"
  },
  "IArguments": {
   "kind": 9,
   "namespace": "",
   "name": "IArguments",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "IArguments"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "IArguments",
   "parameters": null,
   "qName": "IArguments"
  },
  "RegExp": {
   "kind": 9,
   "namespace": "",
   "name": "RegExp",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "RegExp"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "RegExp",
   "parameters": null,
   "qName": "RegExp"
  },
  "Boolean": {
   "kind": 9,
   "namespace": "",
   "name": "Boolean",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Boolean"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "Boolean",
   "parameters": null,
   "qName": "Boolean"
  },
  "Boolean.toString": {
   "kind": 1,
   "namespace": "Boolean",
   "name": "toString",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Boolean_::toString",
    "paramHelp": {},
    "jsDoc": "Returns a string representation of an object.",
    "_name": "toString"
   },
   "pkg": null,
   "retType": "string",
   "parameters": [],
   "snippet": "toString()",
   "qName": "Boolean.toString"
  },
  "String.fromCharCode": {
   "kind": 3,
   "namespace": "String",
   "name": "fromCharCode",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "help": "math/string-from-char-code",
    "shim": "String_::fromCharCode",
    "advanced": true,
    "blockNamespace": "Math",
    "blockId": "stringFromCharCode",
    "block": "text from char code %code",
    "weight": 1,
    "paramHelp": {},
    "jsDoc": "Make a string from the given ASCII character code.",
    "_name": "fromCharCode"
   },
   "pkg": null,
   "retType": "string",
   "parameters": [
    {
     "name": "code",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "fromCharCode(0)",
   "qName": "String.fromCharCode"
  },
  "Number": {
   "kind": 9,
   "namespace": "",
   "name": "Number",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Number"
   },
   "pkg": null,
   "extendsTypes": [],
   "retType": "Number",
   "parameters": null,
   "qName": "Number"
  },
  "Number.toString": {
   "kind": 1,
   "namespace": "Number",
   "name": "toString",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Number_::toString",
    "paramHelp": {},
    "jsDoc": "Returns a string representation of a number.",
    "_name": "toString"
   },
   "pkg": null,
   "retType": "string",
   "parameters": [],
   "snippet": "toString()",
   "qName": "Number.toString"
  },
  "Math": {
   "kind": 5,
   "namespace": "",
   "name": "Math",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "block": "Math"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "Math"
  },
  "Math.pow": {
   "kind": 3,
   "namespace": "Math",
   "name": "pow",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::pow",
    "paramHelp": {
     "x": "The base value of the expression.",
     "y": "The exponent value of the expression."
    },
    "jsDoc": "Returns the value of a base expression taken to a specified power.",
    "_name": "pow"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "The base value of the expression.",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "y",
     "description": "The exponent value of the expression.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "pow(0, 0)",
   "qName": "Math.pow"
  },
  "Math.random": {
   "kind": 3,
   "namespace": "Math",
   "name": "random",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::random",
    "paramHelp": {},
    "jsDoc": "Returns a pseudorandom number between 0 and `max`.",
    "_name": "random"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "max",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "random(0)",
   "qName": "Math.random"
  },
  "Math.sqrt": {
   "kind": 3,
   "namespace": "Math",
   "name": "sqrt",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::sqrt",
    "paramHelp": {
     "x": "A numeric expression."
    },
    "jsDoc": "Returns the square root of a number.",
    "_name": "sqrt"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "A numeric expression.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "sqrt(0)",
   "qName": "Math.sqrt"
  },
  "Math.ceil": {
   "kind": 3,
   "namespace": "Math",
   "name": "ceil",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::ceil",
    "paramHelp": {
     "x": "A numeric expression."
    },
    "jsDoc": "Returns the smallest number greater than or equal to its numeric argument.",
    "_name": "ceil"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "A numeric expression.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "ceil(0)",
   "qName": "Math.ceil"
  },
  "Math.floor": {
   "kind": 3,
   "namespace": "Math",
   "name": "floor",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::floor",
    "paramHelp": {
     "x": "A numeric expression."
    },
    "jsDoc": "Returns the greatest number less than or equal to its numeric argument.",
    "_name": "floor"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "A numeric expression.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "floor(0)",
   "qName": "Math.floor"
  },
  "Math.trunc": {
   "kind": 3,
   "namespace": "Math",
   "name": "trunc",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::trunc",
    "paramHelp": {
     "x": "A numeric expression."
    },
    "jsDoc": "Returns the number with the decimal part truncated.",
    "_name": "trunc"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "A numeric expression.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "trunc(0)",
   "qName": "Math.trunc"
  },
  "Math.round": {
   "kind": 3,
   "namespace": "Math",
   "name": "round",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::round",
    "paramHelp": {
     "x": "The value to be rounded to the nearest number."
    },
    "jsDoc": "Returns a supplied numeric expression rounded to the nearest number.",
    "_name": "round"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "The value to be rounded to the nearest number.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "round(0)",
   "qName": "Math.round"
  },
  "Math.imul": {
   "kind": 3,
   "namespace": "Math",
   "name": "imul",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::imul",
    "paramHelp": {
     "x": "The first number",
     "y": "The second number"
    },
    "jsDoc": "Returns the value of integer signed 32 bit multiplication of two numbers.",
    "_name": "imul"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "The first number",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "y",
     "description": "The second number",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "imul(0, 0)",
   "qName": "Math.imul"
  },
  "Math.idiv": {
   "kind": 3,
   "namespace": "Math",
   "name": "idiv",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "Math_::idiv",
    "paramHelp": {
     "x": "The first number",
     "y": "The second number"
    },
    "jsDoc": "Returns the value of integer signed 32 bit division of two numbers.",
    "_name": "idiv"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "The first number",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "y",
     "description": "The second number",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "idiv(0, 0)",
   "qName": "Math.idiv"
  },
  "helpers": {
   "kind": 5,
   "namespace": "",
   "name": "helpers",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "helpers"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "helpers"
  },
  "helpers.arraySplice": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arraySplice",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arraySplice"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "start",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "len",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arraySplice([], 0, 0)",
   "qName": "helpers.arraySplice"
  },
  "helpers.arrayReverse": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arrayReverse",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arrayReverse"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arrayReverse([])",
   "qName": "helpers.arrayReverse"
  },
  "helpers.arrayShift": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arrayShift",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arrayShift"
   },
   "pkg": null,
   "retType": "T",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arrayShift([])",
   "qName": "helpers.arrayShift"
  },
  "helpers.arrayUnshift": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arrayUnshift",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arrayUnshift"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "value",
     "description": "",
     "type": "T",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arrayUnshift([], null)",
   "qName": "helpers.arrayUnshift"
  },
  "helpers.arraySort": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arraySort",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arraySort"
   },
   "pkg": null,
   "retType": "T[]",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "callbackfn",
     "description": "",
     "type": "(value1: T, value2: T) => number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arraySort([])",
   "qName": "helpers.arraySort"
  },
  "helpers.arrayMap": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arrayMap",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arrayMap"
   },
   "pkg": null,
   "retType": "U[]",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "callbackfn",
     "description": "",
     "type": "(value: T, index: number) => U",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arrayMap([], () => {})",
   "qName": "helpers.arrayMap"
  },
  "helpers.arrayFilter": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arrayFilter",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arrayFilter"
   },
   "pkg": null,
   "retType": "T[]",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "callbackfn",
     "description": "",
     "type": "(value: T, index: number) => boolean",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arrayFilter([], () => {})",
   "qName": "helpers.arrayFilter"
  },
  "helpers.arrayReduce": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arrayReduce",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arrayReduce"
   },
   "pkg": null,
   "retType": "U",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "callbackfn",
     "description": "",
     "type": "(previousValue: U, currentValue: T, currentIndex: number) => U",
     "options": {},
     "isEnum": false
    },
    {
     "name": "initialValue",
     "description": "",
     "type": "U",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arrayReduce([], () => {}, null)",
   "qName": "helpers.arrayReduce"
  },
  "helpers.arraySlice": {
   "kind": 3,
   "namespace": "helpers",
   "name": "arraySlice",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "arraySlice"
   },
   "pkg": null,
   "retType": "T[]",
   "parameters": [
    {
     "name": "arr",
     "description": "",
     "type": "T[]",
     "options": {},
     "isEnum": false
    },
    {
     "name": "start",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "end",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "arraySlice([], 0, 0)",
   "qName": "helpers.arraySlice"
  },
  "Math.clamp": {
   "kind": 3,
   "namespace": "Math",
   "name": "clamp",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "clamp"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "min",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "max",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "value",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "clamp(0, 0, 0)",
   "qName": "Math.clamp"
  },
  "Math.abs": {
   "kind": 3,
   "namespace": "Math",
   "name": "abs",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {
     "x": "A numeric expression for which the absolute value is needed."
    },
    "jsDoc": "Returns the absolute value of a number (the value without regard to whether it is positive or negative).\nFor example, the absolute value of -5 is the same as the absolute value of 5.",
    "_name": "abs"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "A numeric expression for which the absolute value is needed.",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "abs(0)",
   "qName": "Math.abs"
  },
  "Math.sign": {
   "kind": 3,
   "namespace": "Math",
   "name": "sign",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {
     "x": "The numeric expression to test"
    },
    "jsDoc": "Returns the sign of the x, indicating whether x is positive, negative or zero.",
    "_name": "sign"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "x",
     "description": "The numeric expression to test",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "sign(0)",
   "qName": "Math.sign"
  },
  "Math.max": {
   "kind": 3,
   "namespace": "Math",
   "name": "max",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "Returns the larger of two supplied numeric expressions.",
    "_name": "max"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "a",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "b",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "max(0, 0)",
   "qName": "Math.max"
  },
  "Math.min": {
   "kind": 3,
   "namespace": "Math",
   "name": "min",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "Returns the smaller of two supplied numeric expressions.",
    "_name": "min"
   },
   "pkg": null,
   "retType": "number",
   "parameters": [
    {
     "name": "a",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "b",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "min(0, 0)",
   "qName": "Math.min"
  },
  "Register": {
   "kind": 6,
   "namespace": "",
   "name": "Register",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Register"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register"
  },
  "Register.R0": {
   "kind": 7,
   "namespace": "Register",
   "name": "R0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R0"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R0"
  },
  "Register.R1": {
   "kind": 7,
   "namespace": "Register",
   "name": "R1",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R1"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R1"
  },
  "Register.R2": {
   "kind": 7,
   "namespace": "Register",
   "name": "R2",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R2"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R2"
  },
  "Register.R3": {
   "kind": 7,
   "namespace": "Register",
   "name": "R3",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R3"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R3"
  },
  "Register.R4": {
   "kind": 7,
   "namespace": "Register",
   "name": "R4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R4"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R4"
  },
  "Register.R5": {
   "kind": 7,
   "namespace": "Register",
   "name": "R5",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R5"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R5"
  },
  "Register.R6": {
   "kind": 7,
   "namespace": "Register",
   "name": "R6",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R6"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R6"
  },
  "Register.R7": {
   "kind": 7,
   "namespace": "Register",
   "name": "R7",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "R7"
   },
   "pkg": null,
   "retType": "Register",
   "parameters": null,
   "qName": "Register.R7"
  },
  "Condition": {
   "kind": 6,
   "namespace": "",
   "name": "Condition",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Condition"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition"
  },
  "Condition.EQ": {
   "kind": 7,
   "namespace": "Condition",
   "name": "EQ",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "EQ"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition.EQ"
  },
  "Condition.NE": {
   "kind": 7,
   "namespace": "Condition",
   "name": "NE",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "NE"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition.NE"
  },
  "Condition.LT": {
   "kind": 7,
   "namespace": "Condition",
   "name": "LT",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "LT"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition.LT"
  },
  "Condition.GT": {
   "kind": 7,
   "namespace": "Condition",
   "name": "GT",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "GT"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition.GT"
  },
  "Condition.LE": {
   "kind": 7,
   "namespace": "Condition",
   "name": "LE",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "LE"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition.LE"
  },
  "Condition.GE": {
   "kind": 7,
   "namespace": "Condition",
   "name": "GE",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "GE"
   },
   "pkg": null,
   "retType": "Condition",
   "parameters": null,
   "qName": "Condition.GE"
  },
  "Label": {
   "kind": 6,
   "namespace": "",
   "name": "Label",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Label"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label"
  },
  "Label.L1": {
   "kind": 7,
   "namespace": "Label",
   "name": "L1",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L1"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L1"
  },
  "Label.L2": {
   "kind": 7,
   "namespace": "Label",
   "name": "L2",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L2"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L2"
  },
  "Label.L3": {
   "kind": 7,
   "namespace": "Label",
   "name": "L3",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L3"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L3"
  },
  "Label.L4": {
   "kind": 7,
   "namespace": "Label",
   "name": "L4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L4"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L4"
  },
  "Label.L5": {
   "kind": 7,
   "namespace": "Label",
   "name": "L5",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L5"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L5"
  },
  "Label.L6": {
   "kind": 7,
   "namespace": "Label",
   "name": "L6",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L6"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L6"
  },
  "Label.L7": {
   "kind": 7,
   "namespace": "Label",
   "name": "L7",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L7"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L7"
  },
  "Label.L8": {
   "kind": 7,
   "namespace": "Label",
   "name": "L8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L8"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L8"
  },
  "Label.L9": {
   "kind": 7,
   "namespace": "Label",
   "name": "L9",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L9"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L9"
  },
  "Label.L10": {
   "kind": 7,
   "namespace": "Label",
   "name": "L10",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "L10"
   },
   "pkg": null,
   "retType": "Label",
   "parameters": null,
   "qName": "Label.L10"
  },
  "Memory": {
   "kind": 6,
   "namespace": "",
   "name": "Memory",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "Memory"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory"
  },
  "Memory.M00": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M00",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M00"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M00"
  },
  "Memory.M04": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M04",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M04"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M04"
  },
  "Memory.M08": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M08",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M08"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M08"
  },
  "Memory.M0C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M0C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M0C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M0C"
  },
  "Memory.M10": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M10",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M10"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M10"
  },
  "Memory.M14": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M14",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M14"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M14"
  },
  "Memory.M18": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M18",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M18"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M18"
  },
  "Memory.M1C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M1C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M1C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M1C"
  },
  "Memory.M20": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M20",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M20"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M20"
  },
  "Memory.M24": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M24",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M24"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M24"
  },
  "Memory.M28": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M28",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M28"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M28"
  },
  "Memory.M2C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M2C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M2C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M2C"
  },
  "Memory.M30": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M30",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M30"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M30"
  },
  "Memory.M34": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M34",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M34"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M34"
  },
  "Memory.M38": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M38",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M38"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M38"
  },
  "Memory.M3C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M3C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M3C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M3C"
  },
  "Memory.M40": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M40",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M40"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M40"
  },
  "Memory.M44": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M44",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M44"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M44"
  },
  "Memory.M48": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M48",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M48"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M48"
  },
  "Memory.M4C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M4C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M4C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M4C"
  },
  "Memory.M50": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M50",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M50"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M50"
  },
  "Memory.M54": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M54",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M54"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M54"
  },
  "Memory.M58": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M58",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M58"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M58"
  },
  "Memory.M5C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M5C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M5C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M5C"
  },
  "Memory.M60": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M60",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M60"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M60"
  },
  "Memory.M64": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M64",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M64"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M64"
  },
  "Memory.M68": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M68",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M68"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M68"
  },
  "Memory.M6C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M6C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M6C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M6C"
  },
  "Memory.M70": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M70",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M70"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M70"
  },
  "Memory.M74": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M74",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M74"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M74"
  },
  "Memory.M78": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M78",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M78"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M78"
  },
  "Memory.M7C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M7C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M7C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M7C"
  },
  "Memory.M80": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M80",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M80"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M80"
  },
  "Memory.M84": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M84",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M84"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M84"
  },
  "Memory.M88": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M88",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M88"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M88"
  },
  "Memory.M8C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M8C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M8C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M8C"
  },
  "Memory.M90": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M90",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M90"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M90"
  },
  "Memory.M94": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M94",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M94"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M94"
  },
  "Memory.M98": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M98",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M98"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M98"
  },
  "Memory.M9C": {
   "kind": 7,
   "namespace": "Memory",
   "name": "M9C",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "M9C"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.M9C"
  },
  "Memory.MA0": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MA0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MA0"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MA0"
  },
  "Memory.MA4": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MA4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MA4"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MA4"
  },
  "Memory.MA8": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MA8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MA8"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MA8"
  },
  "Memory.MAC": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MAC",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MAC"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MAC"
  },
  "Memory.MB0": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MB0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MB0"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MB0"
  },
  "Memory.MB4": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MB4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MB4"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MB4"
  },
  "Memory.MB8": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MB8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MB8"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MB8"
  },
  "Memory.MBC": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MBC",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MBC"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MBC"
  },
  "Memory.MC0": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MC0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MC0"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MC0"
  },
  "Memory.MC4": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MC4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MC4"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MC4"
  },
  "Memory.MC8": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MC8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MC8"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MC8"
  },
  "Memory.MCC": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MCC",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MCC"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MCC"
  },
  "Memory.MD0": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MD0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MD0"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MD0"
  },
  "Memory.MD4": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MD4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MD4"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MD4"
  },
  "Memory.MD8": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MD8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MD8"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MD8"
  },
  "Memory.MDC": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MDC",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MDC"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MDC"
  },
  "Memory.ME0": {
   "kind": 7,
   "namespace": "Memory",
   "name": "ME0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "ME0"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.ME0"
  },
  "Memory.ME4": {
   "kind": 7,
   "namespace": "Memory",
   "name": "ME4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "ME4"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.ME4"
  },
  "Memory.ME8": {
   "kind": 7,
   "namespace": "Memory",
   "name": "ME8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "ME8"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.ME8"
  },
  "Memory.MEC": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MEC",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MEC"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MEC"
  },
  "Memory.MF0": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MF0",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MF0"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MF0"
  },
  "Memory.MF4": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MF4",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MF4"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MF4"
  },
  "Memory.MF8": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MF8",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MF8"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MF8"
  },
  "Memory.MFC": {
   "kind": 7,
   "namespace": "Memory",
   "name": "MFC",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "MFC"
   },
   "pkg": null,
   "retType": "Memory",
   "parameters": null,
   "qName": "Memory.MFC"
  },
  "console": {
   "kind": 5,
   "namespace": "",
   "name": "console",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "paramHelp": {},
    "jsDoc": "",
    "_name": "console",
    "block": "console"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "console"
  },
  "console.log": {
   "kind": 3,
   "namespace": "console",
   "name": "log",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "shim": "console::log",
    "paramHelp": {},
    "jsDoc": "Print out message",
    "_name": "log"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "msg",
     "description": "",
     "type": "string",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "log(\"\")",
   "qName": "console.log"
  },
  "control": {
   "kind": 5,
   "namespace": "",
   "name": "control",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#D83B01",
    "weight": 60,
    "icon": "",
    "paramHelp": {},
    "jsDoc": "",
    "block": "control"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "control"
  },
  "control.label": {
   "kind": 3,
   "namespace": "control",
   "name": "label",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 1,
    "_source": null,
    "blockId": "processorLBL",
    "block": "LBL %lbl",
    "async": "true",
    "shim": "control::label",
    "paramHelp": {},
    "jsDoc": "a label to jump to",
    "_name": "label"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "lbl",
     "description": "",
     "type": "Label",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "label(null)",
   "qName": "control.label"
  },
  "control.cmp": {
   "kind": 3,
   "namespace": "control",
   "name": "cmp",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorCMP",
    "block": "CMP d:%Rd |, s:%Rs",
    "shim": "control::cmp",
    "paramHelp": {},
    "jsDoc": "Compare contents of Rs and Rd",
    "_name": "cmp"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "cmp(null, null)",
   "qName": "control.cmp"
  },
  "control.beq": {
   "kind": 3,
   "namespace": "control",
   "name": "beq",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 1,
    "_source": null,
    "blockId": "processorBEQ",
    "block": "B%cond || %lbl",
    "async": "true",
    "shim": "control::beq",
    "paramHelp": {},
    "jsDoc": "B = branch on condition",
    "_name": "beq"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "cond",
     "description": "",
     "type": "Condition",
     "options": {},
     "isEnum": true
    },
    {
     "name": "lbl",
     "description": "",
     "type": "Label",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "beq(null, null)",
   "qName": "control.beq"
  },
  "shift": {
   "kind": 5,
   "namespace": "",
   "name": "shift",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#B4009E",
    "weight": 90,
    "paramHelp": {},
    "jsDoc": "",
    "block": "shift"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "shift"
  },
  "shift.lsl": {
   "kind": 3,
   "namespace": "shift",
   "name": "lsl",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorLSL",
    "block": "LSL d:%Rd |, s:%Rs |, C:%Offset5",
    "paramMin": {
     "Offset5": "0"
    },
    "paramMax": {
     "Offset5": "31"
    },
    "shim": "shift::lsl",
    "paramHelp": {},
    "jsDoc": "Shift Rs left by 5-bit immediate value C and place result in Rd",
    "_name": "lsl"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Offset5",
     "description": "",
     "type": "number",
     "options": {
      "min": {
       "value": "0"
      },
      "max": {
       "value": "31"
      }
     },
     "isEnum": false
    }
   ],
   "snippet": "lsl(null, null, 0)",
   "qName": "shift.lsl"
  },
  "shift.lsr": {
   "kind": 3,
   "namespace": "shift",
   "name": "lsr",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorLSR",
    "block": "LSR d:%Rd |, s:%Rs |, C:%Offset5",
    "paramMin": {
     "Offset5": "0"
    },
    "paramMax": {
     "Offset5": "31"
    },
    "shim": "shift::lsr",
    "paramHelp": {},
    "jsDoc": "Shift Rs right by 5-bit immediate value C and place result in Rd",
    "_name": "lsr"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Offset5",
     "description": "",
     "type": "number",
     "options": {
      "min": {
       "value": "0"
      },
      "max": {
       "value": "31"
      }
     },
     "isEnum": false
    }
   ],
   "snippet": "lsr(null, null, 0)",
   "qName": "shift.lsr"
  },
  "logical": {
   "kind": 5,
   "namespace": "",
   "name": "logical",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#5C2D91",
    "weight": 80,
    "icon": "",
    "paramHelp": {},
    "jsDoc": "",
    "block": "logical"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "logical"
  },
  "logical.neg": {
   "kind": 3,
   "namespace": "logical",
   "name": "neg",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorNEG",
    "block": "NEG d:%Rd |, s:%Rs",
    "shim": "logical::neg",
    "paramHelp": {},
    "jsDoc": "Logically negate of the contents of Rs and place result in Rd",
    "_name": "neg"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "neg(null, null)",
   "qName": "logical.neg"
  },
  "logical.and": {
   "kind": 3,
   "namespace": "logical",
   "name": "and",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorAND",
    "block": "AND d:%Rd |, s:%Rs",
    "shim": "logical::and",
    "paramHelp": {},
    "jsDoc": "Logical AND the contents of Rd with the contents of Rs and place result in Rd",
    "_name": "and"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "and(null, null)",
   "qName": "logical.and"
  },
  "logical.orr": {
   "kind": 3,
   "namespace": "logical",
   "name": "orr",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorORR",
    "block": "ORR d:%Rd |, s:%Rs",
    "shim": "logical::orr",
    "paramHelp": {},
    "jsDoc": "Logical OR the contents of Rd with the contents of Rs and place result in Rd",
    "_name": "orr"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "orr(null, null)",
   "qName": "logical.orr"
  },
  "logical.eor": {
   "kind": 3,
   "namespace": "logical",
   "name": "eor",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorEOR",
    "block": "EOR d:%Rd |, s:%Rs",
    "shim": "logical::eor",
    "paramHelp": {},
    "jsDoc": "Logical EOR the contents of Rd with the contents of Rs and place result in Rd",
    "_name": "eor"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "eor(null, null)",
   "qName": "logical.eor"
  },
  "arithmetic": {
   "kind": 5,
   "namespace": "",
   "name": "arithmetic",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#0078D7",
    "weight": 100,
    "icon": "",
    "paramHelp": {},
    "jsDoc": "",
    "block": "arithmetic"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "arithmetic"
  },
  "arithmetic.movsImm": {
   "kind": 3,
   "namespace": "arithmetic",
   "name": "movsImm",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorMOVSIMM",
    "block": "MOV d:%Rd |, C:%Offset8",
    "weight": 90,
    "paramMin": {
     "Offset8": "0"
    },
    "paramMax": {
     "Offset8": "255"
    },
    "shim": "arithmetic::movsImm",
    "paramHelp": {},
    "jsDoc": "",
    "_name": "movsImm"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Offset8",
     "description": "",
     "type": "number",
     "options": {
      "min": {
       "value": "0"
      },
      "max": {
       "value": "255"
      }
     },
     "isEnum": false
    }
   ],
   "snippet": "movsImm(null, 0)",
   "qName": "arithmetic.movsImm"
  },
  "arithmetic.addImm": {
   "kind": 3,
   "namespace": "arithmetic",
   "name": "addImm",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorADDIMM",
    "block": "ADD d:%Rd |, C:%Offset8",
    "weight": 88,
    "paramMin": {
     "Offset8": "0"
    },
    "paramMax": {
     "Offset8": "255"
    },
    "shim": "arithmetic::addImm",
    "paramHelp": {},
    "jsDoc": "Add 8-bit immediate value C to contents of Rd and place result in Rd",
    "_name": "addImm"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Offset8",
     "description": "",
     "type": "number",
     "options": {
      "min": {
       "value": "0"
      },
      "max": {
       "value": "255"
      }
     },
     "isEnum": false
    }
   ],
   "snippet": "addImm(null, 0)",
   "qName": "arithmetic.addImm"
  },
  "arithmetic.subImm": {
   "kind": 3,
   "namespace": "arithmetic",
   "name": "subImm",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorSUBIMM",
    "block": "SUB d:%Rd |, C:%Offset8",
    "weight": 86,
    "paramMin": {
     "Offset8": "0"
    },
    "paramMax": {
     "Offset8": "255"
    },
    "shim": "arithmetic::subImm",
    "paramHelp": {},
    "jsDoc": "Subtract 8-bit immediate value C from contents of Rd and place result in Rd",
    "_name": "subImm"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Offset8",
     "description": "",
     "type": "number",
     "options": {
      "min": {
       "value": "0"
      },
      "max": {
       "value": "255"
      }
     },
     "isEnum": false
    }
   ],
   "snippet": "subImm(null, 0)",
   "qName": "arithmetic.subImm"
  },
  "arithmetic.add": {
   "kind": 3,
   "namespace": "arithmetic",
   "name": "add",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorADD",
    "block": "ADD d:%Rd |, s:%Rs |, n:%Rn",
    "weight": 84,
    "shim": "arithmetic::add",
    "paramHelp": {},
    "jsDoc": "Add contents of Rs to contents of Rd and place result in Rd",
    "_name": "add"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rn",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "add(null, null, null)",
   "qName": "arithmetic.add"
  },
  "arithmetic.sub": {
   "kind": 3,
   "namespace": "arithmetic",
   "name": "sub",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorSUB",
    "block": "SUB d:%Rd |, s:%Rs |, n:%Rn",
    "weight": 82,
    "shim": "arithmetic::sub",
    "paramHelp": {},
    "jsDoc": "Subtract contents of Rs from contents of Rd and place result in Rd",
    "_name": "sub"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rs",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rn",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "sub(null, null, null)",
   "qName": "arithmetic.sub"
  },
  "memory": {
   "kind": 5,
   "namespace": "",
   "name": "memory",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#008272",
    "weight": 70,
    "icon": "",
    "paramHelp": {},
    "jsDoc": "",
    "block": "memory"
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "memory"
  },
  "memory.ldr": {
   "kind": 3,
   "namespace": "memory",
   "name": "ldr",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorLDR",
    "block": "LDR d:%Rd |, |[ b:%Rb |]",
    "shim": "memory::ldr",
    "paramHelp": {},
    "jsDoc": "Load into Rd the 32-bit value at the address specified by Rb",
    "_name": "ldr"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rb",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "ldr(null, null)",
   "qName": "memory.ldr"
  },
  "memory.str": {
   "kind": 3,
   "namespace": "memory",
   "name": "str",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorSTR",
    "block": "STR d:%Rd |, |[ b:%Rb |]",
    "shim": "memory::str",
    "paramHelp": {},
    "jsDoc": "Store the 32-bit value in Rd at the address specified by Rb",
    "_name": "str"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    },
    {
     "name": "Rb",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "str(null, null)",
   "qName": "memory.str"
  },
  "memory.set": {
   "kind": 3,
   "namespace": "memory",
   "name": "set",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "memorySet",
    "block": "Set d:%mem, b:%num",
    "shim": "memory::set",
    "paramHelp": {},
    "jsDoc": "Eli",
    "_name": "set"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "mem",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    },
    {
     "name": "num",
     "description": "",
     "type": "number",
     "options": {},
     "isEnum": false
    }
   ],
   "snippet": "set(0, 0)",
   "qName": "memory.set"
  },
  "io": {
   "kind": 5,
   "namespace": "",
   "name": "io",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "color": "#008002",
    "weight": 50,
    "block": "Input/Output",
    "paramHelp": {},
    "jsDoc": ""
   },
   "pkg": null,
   "retType": "",
   "parameters": null,
   "qName": "io"
  },
  "io.queueIn": {
   "kind": 3,
   "namespace": "io",
   "name": "queueIn",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorIN",
    "block": "IN d:%rd",
    "shim": "io::queueIn",
    "paramHelp": {},
    "jsDoc": "Load into Rd the next 32-bit value in the input queue, if not empty.\nIf the input queue is empty, stop program execution.",
    "_name": "queueIn"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "queueIn(null)",
   "qName": "io.queueIn"
  },
  "io.queueOut": {
   "kind": 3,
   "namespace": "io",
   "name": "queueOut",
   "attributes": {
    "paramDefl": {},
    "callingConvention": 0,
    "_source": null,
    "blockId": "processorOUT",
    "block": "OUT d:%rd",
    "shim": "io::queueOut",
    "paramHelp": {},
    "jsDoc": "Store into the output queue the 32-bit value in Rd.",
    "_name": "queueOut"
   },
   "pkg": null,
   "retType": "void",
   "parameters": [
    {
     "name": "Rd",
     "description": "",
     "type": "Register",
     "options": {},
     "isEnum": true
    }
   ],
   "snippet": "queueOut(null)",
   "qName": "io.queueOut"
  }
 }
}